---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth/login":
    post:
      summary: Generates JWT token
      tags:
      - Authorization with JWT token
      parameters:
      - name: auth
        in: query
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
          required:
          - email
          - password
      responses:
        '200':
          description: Valid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  time:
                    type: string
                  username:
                    type: string
        '401':
          description: Unauthorized
  "/movies/{movie_id}/comments":
    post:
      summary: Create new comment
      security:
      - ApiKeyAuth: []
      tags:
      - Comments - HTTP verbs
      parameters:
      - "$ref": "#/components/parameters/movie_id"
      requestBody:
        description: You can ommit "commentable_type" and "comentable_id" fields, only pass "commentable" with the movie object.
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/create_comment"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_response"
        '422':
          description: Unprocesable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    get:
      summary: Get all comments by movie
      security:
      - ApiKeyAuth: []
      tags:
      - Comments - HTTP verbs
      parameters:
      - "$ref": "#/components/parameters/movie_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_response"
        '422':
          description: Unprocesable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/movies/{movie_id}/comments/{comment_id}":
    get:
      summary: Get specific comment
      security:
      - ApiKeyAuth: []
      tags:
      - Comments - HTTP verbs
      parameters:
      - "$ref": "#/components/parameters/movie_id"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_response"
        '422':
          description: Unprocesable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    patch:
      summary: Update partial fields for specific comment
      security:
      - ApiKeyAuth: []
      tags:
      - Comments - HTTP verbs
      parameters:
      - "$ref": "#/components/parameters/movie_id"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        description: Params to send for partial update. If you want to update entire reocrd, use PUT verb
        required: true
        content: 
          application/json:
            schema: 
              "$ref": "#/components/schemas/create_comment"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_response"
        '422':
          description: Unprocesable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    put:
      summary: Update entire fields for specific comment
      security:
      - ApiKeyAuth: []
      tags:
      - Comments - HTTP verbs
      parameters:
      - "$ref": "#/components/parameters/movie_id"
      - "$ref": "#/components/parameters/comment_id"
      requestBody:
        description: Params to send for update an entire comment.
        required: true
        content: 
          application/json:
            schema: 
              "$ref": "#/components/schemas/create_comment"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_response"
        '422':
          description: Unprocesable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    delete:
      summary: Delete a specific comment
      security:
      - ApiKeyAuth: []
      tags:
      - Comments - HTTP verbs
      parameters:
      - "$ref": "#/components/parameters/movie_id"
      - "$ref": "#/components/parameters/comment_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/comment_response"
        '422':
          description: Unprocesable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorize
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/movies":
    get:
      summary: Get all movies
      tags:
      - Movies - HTTP verbs
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/get_all_movies_resp"
        '422':
          description: Something went wrong
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/users/{user_id}/movies":
    get:
      summary: Get all movies from specific user
      tags:
      - Movies - HTTP verbs
      security:
      - ApiKeyAuth: []
      parameters:
      - "$ref": "#/components/parameters/user_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/get_movies_from_user_resp"
        '422':
          description: Record not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
  "/users/{user_id}/movies/{movie_id}":
    get:
      summary: Show specific movie from user
      tags:
      - Movies - HTTP verbs
      security:
      - ApiKeyAuth: []
      parameters:
      - "$ref": "#/components/parameters/user_id"
      - "$ref": "#/components/parameters/movie_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/get_movie"
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    patch:
      summary: Update single field from movie record
      tags:
      - Movies - HTTP verbs
      security:
      - ApiKeyAuth: []
      parameters:
      - "$ref": "#/components/parameters/user_id"
      - "$ref": "#/components/parameters/movie_id"
      requestBody:
        description: You can update one or more fields, for a complete update, please use put verb.
        required: true
        content:
          application/json:
            schema: 
              "$ref": "#/components/schemas/movie_params"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/movie_message_response"
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    put:
      summary: Update a completed record from movies
      tags:
      - Movies - HTTP verbs
      security:
      - ApiKeyAuth: []
      parameters:
      - "$ref": "#/components/parameters/user_id"
      - "$ref": "#/components/parameters/movie_id"
      requestBody:
        description: Parameters to send to updated completly a movie
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/movie_params"

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/movie_message_response"
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
    delete:
      summary: Delete a movie
      tags:
      - Movies - HTTP verbs
      security:
      - ApiKeyAuth: []
      parameters:
      - "$ref": "#/components/parameters/user_id"
      - "$ref": "#/components/parameters/movie_id"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/movie_message_response"
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error"
servers:
- url: https://moviesnop-api.onrender.com/api/v1
  variables:
    defaultHost:
      default: https://moviesnop-api.onrender.com/api/v1
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  parameters:
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        type: string
    movie_id:
      name: movie_id
      in: path
      required: true
      schema:
        type: string
    comment_id:
      name: comment_id
      in: path
      required: true
      schema:
        type: string
  schemas:
    movie_params:
      type: object
      properties:
        movie:
          type: object
          properties:
            title:
              type: string
            duration:
              type: string
            thriller_link:
              type: string
            public_date:
              type: string
            director_id:
              type: number
    get_all_movies_resp:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        status:
          type: integer
    get_movies_from_user_resp:
      type: object
      properties:
        movies:
          type: array
          items:
            type: string
        status:
          type: integer
    get_movie:
      type: object
      properties:
        movie:
          type: string
        status:
          type: integer
    movie_message_response:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
    comment_response:
      type: object
      properties:
        movie:
          type: object
        comment:
          type: object
        status:
          type: integer
    create_comment:
      type: object
      properties:
        comment:
          type: object
          properties:
            comment:
              type: string
            rate:
              type: string
            user_id:
              type: integer
            commentable_type:
              type: string
            commentable_id:
              type: integer
    error:
      type: object
      properties:
        error:
          type: string
        status:
          type: integer
